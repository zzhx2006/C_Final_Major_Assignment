digraph {
graph [splines=polyline];
D0 [shape=box, style=rounded, label="begin"];
{rank = sink; D1 [shape=box, style=rounded, label="end"];}
D4 [shape=box, label="prtlog(\"执行 accept_client_connection(). \");"];
D6 [shape=diamond, label="(client_count == kMaxClientCount)?"];
D11 [shape=box, label="prtlog(\"\033[31m已达到服务器的最大连接数. \033[0m\");"];
D13 [shape=box, label="return -2;"];
D15 [shape=box, label="pthread_t accept_guard_p;"];
D17 [shape=box, label="prtlog(\"正在尝试创建 accept_guard 线程. \");"];
D19 [shape=diamond, label="(pthread_create(&accept_guard_p, NULL, accept_guard, NULL) < 0)?"];
D24 [shape=box, label="prterr(pthread_create());"];
D26 [shape=box, label="return -3;"];
D28 [shape=box, label="prtlog(\"\033[32m成功创建 accept_guard 线程. \033[0m\");"];
D30 [shape=box, label="prtlog(\"正在尝试分离 accept_guard 线程. \");"];
D32 [shape=diamond, label="(pthread_detach(accept_guard_p) != 0)?"];
D37 [shape=box, label="prterr(pthread_datach());"];
D39 [shape=box, label="return -1;"];
D41 [shape=box, label="prtlog(\"\033[32m成功分离 accept_guard 线程. \033[0m\");"];
D43 [shape=box, label="return 0;"];
D4 -> D6;
D6:e -> D15:n [xlabel=N];
D6:s -> D11:n [xlabel=Y];
D15 -> D17;
D13 -> D1;
D11 -> D13;
D17 -> D19;
D19:e -> D28:n [xlabel=N];
D19:s -> D24:n [xlabel=Y];
D28 -> D30;
D26 -> D1;
D24 -> D26;
D30 -> D32;
D32:e -> D41:n [xlabel=N];
D32:s -> D37:n [xlabel=Y];
D41 -> D43;
D39 -> D1;
D37 -> D39;
D43 -> D1;
D0 -> D4;
}
